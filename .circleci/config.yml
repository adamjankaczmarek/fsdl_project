version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

workflows:
  sample:  # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run. 
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows 
    jobs:
      - build-and-test


jobs:
  build-and-test:  # This is the name of the job, feel free to change it to better match what you're trying to do!
    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.9 container
    # Change the version below to your required version of python
    docker:
      - image: cimg/python:3.8
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      - checkout
      - run:
          name: Install Deps
          command: |
            sudo apt-get update
            sudo apt-get install portaudio19-dev
      - python/install-packages:
          pkg-manager: poetry
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.
      - run:
          name: Config GDrive Access
          command: |
            mkdir -p ./.dvc/tmp
            echo '{"access_token": "ya29.a0AfH6SMD2YWhzMqZvYFGkuGBSg4iA1A9TYcVh2F_v5p1SnpQBQoazcME10cImXgXXTgB57EoZCabyPIROJkQ9i_xO6Ud-86dbY9hYQX_LzVONGc0imEQvZf1VwMzzeUX0rBueso4En8I-DHuB73ScpGrPni8e", "client_id": "710796635688-iivsgbgsb6uv1fap6635dhvuei09o66c.apps.googleusercontent.com", "client_secret": "a1Fz59uTpVNeG_VGuSKDLJXv", "refresh_token": "1//0cWHbfqFHYjkuCgYIARAAGAwSNwF-L9IraYNKpsq5D8YJIdHUG_1HNrJap9VOQ0PNgFNCuClpMUGK8OtEMQukk4S6ljMheM7vpaw", "token_expiry": "2021-05-14T20:40:26Z", "token_uri": "https://oauth2.googleapis.com/token", "user_agent": null, "revoke_uri": "https://oauth2.googleapis.com/revoke", "id_token": null, "id_token_jwt": null, "token_response": {"access_token": "ya29.a0AfH6SMD2YWhzMqZvYFGkuGBSg4iA1A9TYcVh2F_v5p1SnpQBQoazcME10cImXgXXTgB57EoZCabyPIROJkQ9i_xO6Ud-86dbY9hYQX_LzVONGc0imEQvZf1VwMzzeUX0rBueso4En8I-DHuB73ScpGrPni8e", "expires_in": 3599, "refresh_token": "1//0cWHbfqFHYjkuCgYIARAAGAwSNwF-L9IraYNKpsq5D8YJIdHUG_1HNrJap9VOQ0PNgFNCuClpMUGK8OtEMQukk4S6ljMheM7vpaw", "scope": "https://www.googleapis.com/auth/drive https://www.googleapis.com/auth/drive.appdata", "token_type": "Bearer"}, "scopes": ["https://www.googleapis.com/auth/drive", "https://www.googleapis.com/auth/drive.appdata"], "token_info_uri": "https://oauth2.googleapis.com/tokeninfo", "invalid": false, "_class": "OAuth2Credentials", "_module": "oauth2client.client"}' > ./.dvc/tmp/gdrive-user-credentials.json
      - run:
          name: Run DVC
          # This assumes pytest is installed via the install-package step above
          command: |
            poetry shell
            dvc pull ./models/wav2vec_kws/best.ckpt.dvc